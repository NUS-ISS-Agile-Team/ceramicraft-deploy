{
  "__inputs": [],
  "__requires": [
    {"type": "datasource", "id": "prometheus", "name": "Prometheus", "version": "1.0.0"}
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "type": "row",
      "title": "Go Runtime Metrics",
      "gridPos": {"h": 1, "w": 24, "x": 0, "y": 0},
      "collapsed": false,
      "panels": []
    },
    {
      "type": "stat",
      "title": "Services Up",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "count(up{job=\"golang-service\"} == 1)",
          "legendFormat": "Up"
        }
      ],
      "gridPos": {"h": 4, "w": 6, "x": 0, "y": 1},
      "fieldConfig": {
        "defaults": {
          "unit": "short",
          "thresholds": {
            "steps": [
              {"color": "red", "value": null},
              {"color": "yellow", "value": 3},
              {"color": "green", "value": 5}
            ]
          }
        }
      }
    },
    {
      "type": "stat",
      "title": "Total Goroutines",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(go_goroutines{job=\"golang-service\"})",
          "legendFormat": "Goroutines"
        }
      ],
      "gridPos": {"h": 4, "w": 6, "x": 6, "y": 1},
      "fieldConfig": {
        "defaults": {
          "unit": "short"
        }
      }
    },
    {
      "type": "stat",
      "title": "Total Memory",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(go_memstats_alloc_bytes{job=\"golang-service\"})",
          "legendFormat": "Memory"
        }
      ],
      "gridPos": {"h": 4, "w": 6, "x": 12, "y": 1},
      "fieldConfig": {
        "defaults": {
          "unit": "bytes"
        }
      }
    },
    {
      "type": "stat",
      "title": "GC Rate",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(go_gc_duration_seconds_count{job=\"golang-service\"}[5m]))",
          "legendFormat": "GC/s"
        }
      ],
      "gridPos": {"h": 4, "w": 6, "x": 18, "y": 1},
      "fieldConfig": {
        "defaults": {
          "unit": "short"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "Goroutines by Service",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "go_goroutines{job=\"golang-service\"}",
          "legendFormat": "{{instance}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 5},
      "fieldConfig": {
        "defaults": {
          "unit": "short"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "Memory Usage by Service",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "go_memstats_alloc_bytes{job=\"golang-service\"}",
          "legendFormat": "{{instance}} - Allocated"
        },
        {
          "expr": "go_memstats_heap_inuse_bytes{job=\"golang-service\"}",
          "legendFormat": "{{instance}} - Heap In Use"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 5},
      "fieldConfig": {
        "defaults": {
          "unit": "bytes"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "GC Duration",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(go_gc_duration_seconds_bucket{job=\"golang-service\"}[5m])) by (le, instance))",
          "legendFormat": "{{instance}} - 95th percentile"
        },
        {
          "expr": "histogram_quantile(0.99, sum(rate(go_gc_duration_seconds_bucket{job=\"golang-service\"}[5m])) by (le, instance))",
          "legendFormat": "{{instance}} - 99th percentile"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 11},
      "fieldConfig": {
        "defaults": {
          "unit": "s"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "GC Rate by Service",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "rate(go_gc_duration_seconds_count{job=\"golang-service\"}[5m])",
          "legendFormat": "{{instance}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 11},
      "fieldConfig": {
        "defaults": {
          "unit": "short"
        }
      }
    },
    {
      "type": "row",
      "title": "HTTP Metrics",
      "gridPos": {"h": 1, "w": 24, "x": 0, "y": 17},
      "collapsed": false,
      "panels": []
    },
    {
      "type": "timeseries",
      "title": "HTTP Request Rate",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{job=\"golang-service\"}[5m])) by (instance, method, handler)",
          "legendFormat": "{{instance}} {{method}} {{handler}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 18},
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "HTTP Response Time",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job=\"golang-service\"}[5m])) by (le, instance, handler))",
          "legendFormat": "{{instance}} {{handler}} - 95th percentile"
        },
        {
          "expr": "histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket{job=\"golang-service\"}[5m])) by (le, instance, handler))",
          "legendFormat": "{{instance}} {{handler}} - 99th percentile"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 18},
      "fieldConfig": {
        "defaults": {
          "unit": "s"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "HTTP Error Rate",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{job=\"golang-service\",code!~\"2..\"}[5m])) by (instance, handler, code)",
          "legendFormat": "{{instance}} {{handler}} {{code}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 24},
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "HTTP Status Codes",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{job=\"golang-service\"}[5m])) by (code)",
          "legendFormat": "{{code}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 24},
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        }
      }
    },
    {
      "type": "row",
      "title": "gRPC Metrics",
      "gridPos": {"h": 1, "w": 24, "x": 0, "y": 30},
      "collapsed": false,
      "panels": []
    },
    {
      "type": "timeseries",
      "title": "gRPC Request Rate",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(grpc_server_handled_total{job=\"golang-service\"}[5m])) by (instance, grpc_service, grpc_method)",
          "legendFormat": "{{instance}} {{grpc_service}} {{grpc_method}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 31},
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "gRPC Response Time",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(grpc_server_handling_seconds_bucket{job=\"golang-service\"}[5m])) by (le, instance, grpc_service, grpc_method))",
          "legendFormat": "{{instance}} {{grpc_service}} {{grpc_method}} - 95th percentile"
        },
        {
          "expr": "histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job=\"golang-service\"}[5m])) by (le, instance, grpc_service, grpc_method))",
          "legendFormat": "{{instance}} {{grpc_service}} {{grpc_method}} - 99th percentile"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 31},
      "fieldConfig": {
        "defaults": {
          "unit": "s"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "gRPC Error Rate",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(grpc_server_handled_total{job=\"golang-service\",grpc_code!=\"OK\"}[5m])) by (instance, grpc_service, grpc_method, grpc_code)",
          "legendFormat": "{{instance}} {{grpc_service}} {{grpc_method}} {{grpc_code}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 37},
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        }
      }
    },
    {
      "type": "timeseries",
      "title": "gRPC Status Codes",
      "datasource": {"type": "prometheus", "uid": "prometheus"},
      "targets": [
        {
          "expr": "sum(rate(grpc_server_handled_total{job=\"golang-service\"}[5m])) by (grpc_code)",
          "legendFormat": "{{grpc_code}}"
        }
      ],
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 37},
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        }
      }
    }
  ],
  "refresh": "30s",
  "schemaVersion": 36,
  "style": "dark",
  "tags": ["golang", "microservices", "http", "grpc"],
  "templating": {"list": []},
  "time": {"from": "now-6h", "to": "now"},
  "timepicker": {},
  "timezone": "browser",
  "title": "Go Microservices Monitoring",
  "uid": "go-services-dashboard",
  "version": 1
}